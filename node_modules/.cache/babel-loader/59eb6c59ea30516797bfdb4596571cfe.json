{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst backendURL = 'https://redux-user-auth.up.railway.app'; // const backendURL = 'http://127.0.0.1:5000'\n\nexport const userLogin = createAsyncThunk('user/login', async (_ref, _ref2) => {\n  let {\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    // configure header's Content-Type as JSON\n    // const config = {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    // }\n    const config = {\n      headers: {\n        Authorization: 'Bearer ' + this.token\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${backendURL}/api/user/login`, {\n      email,\n      password\n    }, config); // store user's token in local storage\n\n    localStorage.setItem('userToken', data.userToken);\n    return data;\n  } catch (error) {\n    // return custom error message from API if any\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const registerUser = createAsyncThunk('user/register', async (_ref3, _ref4) => {\n  let {\n    firstName,\n    email,\n    password\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.post(`${backendURL}/api/user/register`, {\n      firstName,\n      email,\n      password\n    }, config);\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});","map":{"version":3,"names":["axios","createAsyncThunk","backendURL","userLogin","email","password","rejectWithValue","config","headers","Authorization","token","data","post","localStorage","setItem","userToken","error","response","message","registerUser","firstName"],"sources":["C:/Users/SiThu/Documents/sithu/react/redux-user-auth/frontend/src/features/auth/authActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nconst backendURL = 'https://redux-user-auth.up.railway.app'\r\n// const backendURL = 'http://127.0.0.1:5000'\r\n\r\nexport const userLogin = createAsyncThunk(\r\n  'user/login',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      // configure header's Content-Type as JSON\r\n      // const config = {\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //   },\r\n      // }\r\n\r\n\r\n     const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + this.token\r\n        }\r\n    }\r\n\r\n      const { data } = await axios.post(\r\n        `${backendURL}/api/user/login`,\r\n        { email, password },\r\n        config\r\n      )\r\n\r\n      // store user's token in local storage\r\n      localStorage.setItem('userToken', data.userToken)\r\n\r\n      return data\r\n    } catch (error) {\r\n      // return custom error message from API if any\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message)\r\n      } else {\r\n        return rejectWithValue(error.message)\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'user/register',\r\n  async ({ firstName, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n\r\n      await axios.post(\r\n        `${backendURL}/api/user/register`,\r\n        { firstName, email, password },\r\n        config\r\n      )\r\n    } catch (error) {\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message)\r\n      } else {\r\n        return rejectWithValue(error.message)\r\n      }\r\n    }\r\n  }\r\n)\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,UAAU,GAAG,wCAAnB,C,CACA;;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,YADuC,EAEvC,uBAAoD;EAAA,IAA7C;IAAEG,KAAF;IAASC;EAAT,CAA6C;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAClD,IAAI;IACF;IACA;IACA;IACA;IACA;IACA;IAGD,MAAMC,MAAM,GAAG;MACZC,OAAO,EAAE;QACLC,aAAa,EAAE,YAAY,KAAKC;MAD3B;IADG,CAAf;IAMC,MAAM;MAAEC;IAAF,IAAW,MAAMX,KAAK,CAACY,IAAN,CACpB,GAAEV,UAAW,iBADO,EAErB;MAAEE,KAAF;MAASC;IAAT,CAFqB,EAGrBE,MAHqB,CAAvB,CAfE,CAqBF;;IACAM,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAvC;IAEA,OAAOJ,IAAP;EACD,CAzBD,CAyBE,OAAOK,KAAP,EAAc;IACd;IACA,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAA1C,EAAmD;MACjD,OAAOZ,eAAe,CAACU,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAtB;IACD,CAFD,MAEO;MACL,OAAOZ,eAAe,CAACU,KAAK,CAACE,OAAP,CAAtB;IACD;EACF;AACF,CApCsC,CAAlC;AAuCP,OAAO,MAAMC,YAAY,GAAGlB,gBAAgB,CAC1C,eAD0C,EAE1C,wBAA+D;EAAA,IAAxD;IAAEmB,SAAF;IAAahB,KAAb;IAAoBC;EAApB,CAAwD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAC7D,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAMA,MAAMR,KAAK,CAACY,IAAN,CACH,GAAEV,UAAW,oBADV,EAEJ;MAAEkB,SAAF;MAAahB,KAAb;MAAoBC;IAApB,CAFI,EAGJE,MAHI,CAAN;EAKD,CAZD,CAYE,OAAOS,KAAP,EAAc;IACd,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAA1C,EAAmD;MACjD,OAAOZ,eAAe,CAACU,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAAtB;IACD,CAFD,MAEO;MACL,OAAOZ,eAAe,CAACU,KAAK,CAACE,OAAP,CAAtB;IACD;EACF;AACF,CAtByC,CAArC"},"metadata":{},"sourceType":"module"}