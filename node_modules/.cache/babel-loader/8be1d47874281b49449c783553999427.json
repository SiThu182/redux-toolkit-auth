{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { registerUser, userLogin } from './authActions'; // initialize userToken from local storage\n\nconst userToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : null;\nconst initialState = {\n  loading: false,\n  userInfo: null,\n  userToken,\n  error: null,\n  success: false\n};\nconst authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem('userToken'); // delete token from storage\n\n      state.loading = false;\n      state.userInfo = null;\n      state.userToken = null;\n      state.error = null;\n    },\n    setCredentials: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.userInfo = payload;\n    }\n  },\n  extraReducers: {\n    // login user\n    [userLogin.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [userLogin.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.loading = false;\n      state.userInfo = payload;\n      state.userToken = payload.userToken;\n    },\n    [userLogin.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loading = false;\n      state.error = payload;\n    },\n    // register user\n    [registerUser.pending]: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    [registerUser.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.loading = false;\n      state.success = true; // registration successful\n    },\n    [registerUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.loading = false;\n      state.error = payload;\n    }\n  }\n});\nexport const {\n  logout,\n  setCredentials\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","registerUser","userLogin","userToken","localStorage","getItem","initialState","loading","userInfo","error","success","authSlice","name","reducers","logout","state","removeItem","setCredentials","payload","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/SiThu/Documents/sithu/react/redux-user-auth/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { registerUser, userLogin } from './authActions'\r\n\r\n// initialize userToken from local storage\r\nconst userToken = localStorage.getItem('userToken')\r\n  ? localStorage.getItem('userToken')\r\n  : null\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userInfo: null,\r\n  userToken,\r\n  error: null,\r\n  success: false,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.removeItem('userToken') // delete token from storage\r\n      state.loading = false\r\n      state.userInfo = null\r\n      state.userToken = null\r\n      state.error = null\r\n    },\r\n    setCredentials: (state, { payload }) => {\r\n      state.userInfo = payload\r\n    },\r\n  },\r\n  extraReducers: {\r\n    // login user\r\n    [userLogin.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [userLogin.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.userInfo = payload\r\n      state.userToken = payload.userToken\r\n    },\r\n    [userLogin.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n    // register user\r\n    [registerUser.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [registerUser.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.success = true // registration successful\r\n    },\r\n    [registerUser.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { logout, setCredentials } = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,eAAxC,C,CAEA;;AACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACdD,YAAY,CAACC,OAAb,CAAqB,WAArB,CADc,GAEd,IAFJ;AAIA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,QAAQ,EAAE,IAFS;EAGnBL,SAHmB;EAInBM,KAAK,EAAE,IAJY;EAKnBC,OAAO,EAAE;AALU,CAArB;AAQA,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MADsB;EAE5BN,YAF4B;EAG5BO,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAD,IAAW;MACjBX,YAAY,CAACY,UAAb,CAAwB,WAAxB,EADiB,CACoB;;MACrCD,KAAK,CAACR,OAAN,GAAgB,KAAhB;MACAQ,KAAK,CAACP,QAAN,GAAiB,IAAjB;MACAO,KAAK,CAACZ,SAAN,GAAkB,IAAlB;MACAY,KAAK,CAACN,KAAN,GAAc,IAAd;IACD,CAPO;IAQRQ,cAAc,EAAE,CAACF,KAAD,WAAwB;MAAA,IAAhB;QAAEG;MAAF,CAAgB;MACtCH,KAAK,CAACP,QAAN,GAAiBU,OAAjB;IACD;EAVO,CAHkB;EAe5BC,aAAa,EAAE;IACb;IACA,CAACjB,SAAS,CAACkB,OAAX,GAAsBL,KAAD,IAAW;MAC9BA,KAAK,CAACR,OAAN,GAAgB,IAAhB;MACAQ,KAAK,CAACN,KAAN,GAAc,IAAd;IACD,CALY;IAMb,CAACP,SAAS,CAACmB,SAAX,GAAuB,CAACN,KAAD,YAAwB;MAAA,IAAhB;QAAEG;MAAF,CAAgB;MAC7CH,KAAK,CAACR,OAAN,GAAgB,KAAhB;MACAQ,KAAK,CAACP,QAAN,GAAiBU,OAAjB;MACAH,KAAK,CAACZ,SAAN,GAAkBe,OAAO,CAACf,SAA1B;IACD,CAVY;IAWb,CAACD,SAAS,CAACoB,QAAX,GAAsB,CAACP,KAAD,YAAwB;MAAA,IAAhB;QAAEG;MAAF,CAAgB;MAC5CH,KAAK,CAACR,OAAN,GAAgB,KAAhB;MACAQ,KAAK,CAACN,KAAN,GAAcS,OAAd;IACD,CAdY;IAeb;IACA,CAACjB,YAAY,CAACmB,OAAd,GAAyBL,KAAD,IAAW;MACjCA,KAAK,CAACR,OAAN,GAAgB,IAAhB;MACAQ,KAAK,CAACN,KAAN,GAAc,IAAd;IACD,CAnBY;IAoBb,CAACR,YAAY,CAACoB,SAAd,GAA0B,CAACN,KAAD,YAAwB;MAAA,IAAhB;QAAEG;MAAF,CAAgB;MAChDH,KAAK,CAACR,OAAN,GAAgB,KAAhB;MACAQ,KAAK,CAACL,OAAN,GAAgB,IAAhB,CAFgD,CAE3B;IACtB,CAvBY;IAwBb,CAACT,YAAY,CAACqB,QAAd,GAAyB,CAACP,KAAD,YAAwB;MAAA,IAAhB;QAAEG;MAAF,CAAgB;MAC/CH,KAAK,CAACR,OAAN,GAAgB,KAAhB;MACAQ,KAAK,CAACN,KAAN,GAAcS,OAAd;IACD;EA3BY;AAfa,CAAD,CAA7B;AA8CA,OAAO,MAAM;EAAEJ,MAAF;EAAUG;AAAV,IAA6BN,SAAS,CAACY,OAA7C;AAEP,eAAeZ,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}